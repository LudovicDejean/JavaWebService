
package servicexml;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "RecupererXML", targetNamespace = "http://ServiceXML/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RecupererXML {


    /**
     * 
     * @throws MalformedURLException_Exception
     * @throws JAXBException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "test", targetNamespace = "http://ServiceXML/", className = "servicexml.Test")
    @ResponseWrapper(localName = "testResponse", targetNamespace = "http://ServiceXML/", className = "servicexml.TestResponse")
    @Action(input = "http://ServiceXML/RecupererXML/testRequest", output = "http://ServiceXML/RecupererXML/testResponse", fault = {
        @FaultAction(className = JAXBException_Exception.class, value = "http://ServiceXML/RecupererXML/test/Fault/JAXBException"),
        @FaultAction(className = MalformedURLException_Exception.class, value = "http://ServiceXML/RecupererXML/test/Fault/MalformedURLException")
    })
    public void test()
        throws JAXBException_Exception, MalformedURLException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     * @throws MalformedURLException_Exception
     * @throws JAXBException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listMetar", targetNamespace = "http://ServiceXML/", className = "servicexml.ListMetar")
    @ResponseWrapper(localName = "listMetarResponse", targetNamespace = "http://ServiceXML/", className = "servicexml.ListMetarResponse")
    @Action(input = "http://ServiceXML/RecupererXML/listMetarRequest", output = "http://ServiceXML/RecupererXML/listMetarResponse", fault = {
        @FaultAction(className = JAXBException_Exception.class, value = "http://ServiceXML/RecupererXML/listMetar/Fault/JAXBException"),
        @FaultAction(className = MalformedURLException_Exception.class, value = "http://ServiceXML/RecupererXML/listMetar/Fault/MalformedURLException")
    })
    public List<Object> listMetar()
        throws JAXBException_Exception, MalformedURLException_Exception
    ;

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     * @throws JAXBException_Exception
     * @throws MalformedURLException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getIdMetar", targetNamespace = "http://ServiceXML/", className = "servicexml.GetIdMetar")
    @ResponseWrapper(localName = "getIdMetarResponse", targetNamespace = "http://ServiceXML/", className = "servicexml.GetIdMetarResponse")
    @Action(input = "http://ServiceXML/RecupererXML/getIdMetarRequest", output = "http://ServiceXML/RecupererXML/getIdMetarResponse", fault = {
        @FaultAction(className = JAXBException_Exception.class, value = "http://ServiceXML/RecupererXML/getIdMetar/Fault/JAXBException"),
        @FaultAction(className = MalformedURLException_Exception.class, value = "http://ServiceXML/RecupererXML/getIdMetar/Fault/MalformedURLException")
    })
    public String getIdMetar(
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws JAXBException_Exception, MalformedURLException_Exception
    ;

}
